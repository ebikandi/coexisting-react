{"version":3,"sources":["logo.svg","index.css","App.css","button.js","App.js","serviceWorker.js","index.js"],"names":["COLORS","useState","versions","setVersions","color","setColor","handleClick","require","version","bundle","global","window","React","current","find","c","backgroundColor","App","logo","isLocalhost","Boolean","location","hostname","match","register","config","process","navigator","publicUrl","URL","href","origin","addEventListener","swUrl","checkValidServiceWorker","serviceWorker","ready","then","console","log","registerValidSW","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","fetch","headers","response","contentType","get","status","indexOf","unregister","reload","message","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a38e3853.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","import React, { useState } from 'react';\r\n\r\nconst COLORS = ['yellow', 'antiquewhite'];\r\nexport default () => {\r\n  const [versions, setVersions] = useState({});\r\n  const [color, setColor] = useState(COLORS[0]);\r\n  const handleClick = () => {\r\n    const { version } = require('react');\r\n    setVersions({});\r\n    setVersions({ bundle: version, global: window.React?.version });\r\n    setColor(current => COLORS.find(c => c !== current));\r\n  };\r\n  return (\r\n    <>\r\n      <button type=\"button\" onClick={handleClick}>\r\n        Get versions\r\n      </button>\r\n      {versions.bundle && (\r\n        <div id=\"nko-log\" style={{ backgroundColor: color, color: 'black' }}>\r\n          <h3>App: {versions.bundle}</h3>\r\n          <h3>Window: {versions.global}</h3>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Button from './button';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>Hi! I am a React app!!</p>\n        <Button />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}